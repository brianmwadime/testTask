
import { ChainMapped, Token, TokenMapped } from '../types';
import { CHAIN_ID, ZERO_ADDRESS } from './chain.constants';

export enum TOKEN_SYMBOL {
  USDEX = 'USDEX',
  USDC = 'USDC',
  ETH = 'ETH',
  WBNB = 'WBNB',
  USDT = 'USDT',
  DEX = 'DEX',
  DEXSHARE = 'DEXSHARE',
  BTCB = 'BTCB',
  BNB = 'BNB',
  FTM = 'FTM',
  CRO = 'CRO',
  MATIC = 'MATIC',
  AVAX = 'AVAX',
  BUSD = 'BUSD',
  MGP = 'MGP',
  WMX = 'WMX',
  KRS = 'KRS',
  WOM = 'WOM',
  RACA = 'RACA',
  SFUND = 'SFUND',
  HOOP = 'HOOP',
  SPS = 'SPS',
  CO = 'CO',
  PEEL = 'PEEL',
  OLE = 'OLE',
  BTCST = 'BTCST',
  CAKE = 'CAKE',
  XCAD = 'XCAD',
  HOOK = 'HOOK',
  BSCPAD = 'BSCPAD',
  GQ = 'GQ',
  SANTOS = 'SANTOS',
  APX = 'APX',
  AXS = 'AXS',
  HIGH = 'HIGH',
  INJ = 'INJ',
  METIS = 'METIS',
  ALICE = 'ALICE',
  CHESS = 'CHESS',
  C98 = 'C98',
  DAR = 'DAR',
  WOO = 'WOO',
  CEEK = 'CEEK',
  GAL = 'GAL',
  CHR = 'CHR',
  DOT = 'DOT',
  XVS = 'XVS',
  WIN = 'WIN',
  DOGE = 'DOGE',
  ADA = 'ADA',
  GMT = 'GMT',
  XRP = 'XRP',
  IOTX = 'IOTX',
  GMR = 'GMR',
  HOTCROSS = 'HOTCROSS',
  KNIGHT = 'KNIGHT',
  TLOS = 'TLOS',
  FORGE = 'FORGE',
  TOR = 'TOR',
  VAI = 'VAI',
  LINK = 'LINK',
  TWT = 'TWT',
  SPA = 'SPA',
  ALPACA = 'ALPACA',
  UNI = 'UNI',
  BANANA = 'BANANA',
  BTT = 'BTT',
  TRX = 'TRX',
  LTC = 'LTC',
  GUARD = 'GUARD',
  MBOX = 'MBOX',
  FIL = 'FIL',
  DAI = 'DAI',
  AAVE = 'AAVE',
  SFP = 'SFP',
  TUSD = 'TUSD',
  BFG = 'BFG',
  REEF = 'REEF',
  MANA = 'MANA',
  BSW = 'BSW',
  MILK = 'MILK',
  BABY = 'BABY',
  ATOM = 'ATOM',
  _1INCH = '1INCH',
  SOL = 'SOL',
  NEAR = 'NEAR',
  APE = 'APE',
  SUSHI = 'SUSHI',
  EOS = 'EOS',
  DOME = 'DOME',
  SAND = 'SAND',
  ONE = 'ONE',
  XLM = 'XLM',
  ZIL = 'ZIL',
  BCH = 'BCH',
  BAT = 'BAT',
  GHNY = 'GHNY',
  SXP = 'SXP',
  VET = 'VET',
  TONCOIN = 'TONCOIN',
  EGLD = 'EGLD',
  SHIB = 'SHIB',
  ETC = 'ETC',
  TKO = 'TKO',
  TENFI = 'TENFI',
  TMT = 'TMT',
  FRAX = 'FRAX',
  PACOCA = 'PACOCA',
  KAI = 'KAI',
  SKILL = 'SKILL',
  MASK = 'MASK',
  MDX = 'MDX',
  XMDX = 'XMDX',
  HMDX = 'HMDX',
  PROS = 'PROS',
  COW = 'COW',
  NEWB = 'NEWB',
  KSWAP = 'KSWAP',
  EMP = 'EMP',
  BNBX = 'BNBX',
  ESHARE = 'ESHARE',
  MDB = 'MDB',
  ANKR = 'ANKR',
  DAO = 'DAO',
  DEI = 'DEI',
  DEUS = 'DEUS',
  DOLA = 'DOLA',
  FEAR = 'FEAR',
  FXS = 'FXS',
  HAY = 'HAY',
  IDIA = 'IDIA',
  LQDR = 'LQDR',
  MAI = 'MAI',
  MULTI = 'MULTI',
  OATH = 'OATH',
  STKBNB = 'STKBNB',
  THE = 'THE',
  TAROT = 'TAROT',
  FBOMB = 'FBOMB',
  PRIMAL = 'PRIMAL',
  FRXETH = 'FRXETH',
  FITFI = 'FITFI',
  CANTO = 'CANTO',
  AETH = 'AETH',
  WCANTO = 'WCANTO',
  NOTE = 'NOTE',
  CINU = 'CINU',
  ORN = 'ORN',
}

export enum TOKEN_TYPE {
  ERC20 = 0,
  LP = 1,
  ETF = 2,
  STABLE_LP = 3,
}

export const NATIVE_TOKEN: ChainMapped<Token> = {
  [CHAIN_ID.BSC]: new Token(
    CHAIN_ID.BSC,
    ZERO_ADDRESS,
    18,
    TOKEN_SYMBOL.BNB,
  ),
};

type TokenList = ChainMapped<TokenMapped>

export const TOKENS: TokenList = {
  [CHAIN_ID.BSC]: {
    [TOKEN_SYMBOL.BNB]: NATIVE_TOKEN[CHAIN_ID.BSC],
    [TOKEN_SYMBOL.WBNB]: new Token(
      CHAIN_ID.BSC,
      '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',
      18,
      TOKEN_SYMBOL.WBNB,
    ),
    [TOKEN_SYMBOL.DEX]: new Token(
      CHAIN_ID.BSC,
      '0x147E07976E1ae78287c33aAFAab87760d32E50A5',
      9,
      TOKEN_SYMBOL.DEX,
      false,
    ),
    [TOKEN_SYMBOL.USDC]: new Token(
      CHAIN_ID.BSC,
      '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',
      18,
      TOKEN_SYMBOL.USDC,
    ),
    [TOKEN_SYMBOL.ETH]: new Token(
      CHAIN_ID.BSC,
      '0x2170ed0880ac9a755fd29b2688956bd959f933f8',
      18,
      TOKEN_SYMBOL.ETH,
    ),
    [TOKEN_SYMBOL.DEXSHARE]: new Token(
      CHAIN_ID.BSC,
      '0xf4914E6D97a75f014AcFcF4072f11be5CfFc4cA6',
      18,
      TOKEN_SYMBOL.DEXSHARE,
    ),
    [TOKEN_SYMBOL.USDEX]: new Token(
      CHAIN_ID.BSC,
      '0x829c09fCc46D9fd31967272ABA245BEF9f727F93',
      18,
      TOKEN_SYMBOL.USDEX,
    ),
    [TOKEN_SYMBOL.USDT]: new Token(
      CHAIN_ID.BSC,
      '0x55d398326f99059ff775485246999027b3197955',
      18,
      TOKEN_SYMBOL.USDT,
    ),
    [TOKEN_SYMBOL.BTCB]: new Token(
      CHAIN_ID.BSC,
      '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',
      18,
      TOKEN_SYMBOL.BTCB,
    ),
    [TOKEN_SYMBOL.BUSD]: new Token(
      CHAIN_ID.BSC,
      '0xe9e7cea3dedca5984780bafc599bd69add087d56',
      18,
      TOKEN_SYMBOL.BUSD,
    ),
    [TOKEN_SYMBOL.EMP]: new Token(
      CHAIN_ID.BSC,
      '0x3b248cefa87f836a4e6f6d6c9b42991b88dc1d58',
      18,
      TOKEN_SYMBOL.EMP,
    ),
    [TOKEN_SYMBOL.ESHARE]: new Token(
      CHAIN_ID.BSC,
      '0x29c55f1b02a95f0b30e61976835a3eee2359ad92',
      18,
      TOKEN_SYMBOL.ESHARE,
    ),
    [TOKEN_SYMBOL.ORN]: new Token(
      CHAIN_ID.BSC,
      '0xe4ca1f75eca6214393fce1c1b316c237664eaa8e',
      8,
      TOKEN_SYMBOL.ORN,
    ),
  },
};

export const AVAILABLE_DEPOSIT_TOKENS = {
  [CHAIN_ID.BSC]: [TOKENS[CHAIN_ID.BSC][TOKEN_SYMBOL.USDC], TOKENS[CHAIN_ID.BSC][TOKEN_SYMBOL.USDT]],
};

export const MAX_UINT256 = '115792089237316195423570985008687907853269984665640564039457584007913129639935';
export const MIN_ALLOWANCE_AMOUNT = '1000000000000000000000000000';
